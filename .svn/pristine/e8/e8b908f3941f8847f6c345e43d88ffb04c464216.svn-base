<?php
/** 获取当前访问的文件名 */
function getFileName(){
	$url = $_SERVER['PHP_SELF']; 
	$uri= substr( $url , strrpos($url , '/')+1 ); 
	if ($_SERVER["QUERY_STRING"])
	{
		$uri .= '?'.$_SERVER["QUERY_STRING"];
	}
	return $uri; 
}

/** 跳转 */
function jump($url){
	Header("HTTP/1.1 303 See Other"); 
	Header("Location: $url"); 
	exit;
}

/** 生成用户信息的xml文件 
 *  @param string  $type  类型，有all跟selected两种
 *  @param array  $userList  用信息数组
 *  return  $fileName 生成的文件路径
 */
function createGametestXml ($xmlPath,$userList,$newFile=true) {
	$xmlstring = '<?xml version="1.0" encoding="utf-8" ?><root></root>';
	$xml = new SimpleXMLElement($xmlstring);
	foreach ($userList as $perInfo){
		$user = $xml->addChild("user");
		$user->addAttribute("id", $perInfo['id']);
		$user->addChild("account", $perInfo['username']);
		$user->addChild("name",$perInfo['realname']);
		$user->addChild("email",$perInfo['email']);
	}
	$fileName = 'userInfo.xml';
	$xml->asXML($xmlPath.$fileName);
	return $fileName;
}

/** 另存为 
 *  @param string  $fileName userInfoXml文件名
 */
function saveAs ($xmlPath,$fileName){
	header('Content-type: application/xml');   
	header('Content-Disposition: attachment; filename="'.$fileName.'"');   
	readfile($xmlPath.$fileName); 
}

function firephp(){
	ob_start();
FB::log('Hello World !'); // 常规记录
FB::group('Test Group A'); // 记录分组
// 以下为按照不同类别或者类型进行信息记录
FB::log('Plain Message');
FB::info('Info Message');
FB::warn('Warn Message');
FB::error('Error Message');
FB::log('Message','Optional Label');
FB::groupEnd();
FB::group('Test Group B');
FB::log('Hello World B');
FB::log('Plain Message');
FB::info('Info Message');
FB::warn('Warn Message');
FB::error('Error Message');
FB::log('Message','Optional Label');
FB::groupEnd();
// 将信息作为table输出
$table[] = array('Col 1 Heading','Col 2 Heading','Col 2 Heading');
$table[] = array('Row 1 Col 1','Row 1 Col 2','Row 1 Col 2');
$table[] = array('Row 2 Col 1','Row 2 Col 2');
$table[] = array('Row 3 Col 1','Row 3 Col 2');
FB::table('Table Label', $table);
// 在异常处理中使用FirePHP
class MyException extends Exception{
    public function  __construct($message, $code) {
        parent::__construct($message, $code);
    }
    public function log(){
        FB::log($this->getMessage());
    }
}
try{
    echo 'MoXie';
    throw new MyException('some description',1);
}catch(MyException $e){
    $e->log();
}	
	
}

function redirect($url)
{
	header("Location: ./main.php");
}
function gourl($iAlert,$iPage,$history='',$target="window")
{
	if ($iAlert != "") {
		echo '<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />';
		echo '<script language="javascript">alert("'.$iAlert.'")</script>';
	}
	if ($iPage != "") {
		echo '<script language="javascript">'.$target.'.location.href = "'.$iPage.'";</script>';
		exit;
	}
	if ($history != "") {
		echo '<script language="javascript">history.go('.$history.');</script>';
		exit;
	}
}
function isNum($value, $maxlen=0)
{
	if(!preg_match('/^[1-9]+[0-9]*$/',$value))
	{
		return false;
	}
	if($maxlen > 0 && strlen($value) > $maxlen)
	{
		return false;
	}
	return true;
}
function isUrl($url){
	if(preg_match('|^http(s)?://(.)+/$|',$url)){
		 return true;
	}
	return false;
}
function isHost($host){
	if(preg_match('#^([0-9]{1,3}\.){3}[0-9]{1,3}$|^[a-z0-9-]+(.[a-z]+)+$#i',$host)){
		 return true;
	}
	return false;
}
function isPort($port){
	if(preg_match('|^[0-9]{1,5}$|',$port)){
		 return true;
	}
	return false;
}


?>